local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=1;local v30;v27=v12(v11(v27,5),v7("\87\165","\219\121\139\65\108\191"),function(v42)if (v9(v42,5 -3 )==(226 -147)) then v30=v8(v11(v42,1,1));return "";else local v91=v10(v8(v42,16));if v30 then local v99=v13(v91,v30);v30=nil;return v99;else return v91;end end end);local function v31(v43,v44,v45)if v45 then local v92=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + (1 -0))) ;return v92-(v92%1) ;else local v93=0;local v94;while true do if (v93==0) then v94=2^(v44-(2 -1)) ;return (((v43%(v94 + v94))>=v94) and (620 -(555 + 64))) or 0 ;end end end end local function v32()local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33()local v47,v48=v9(v27,v29,v29 + (933 -(857 + 74)) );v29=v29 + 2 ;return (v48 * 256) + v47 ;end local function v34()local v49=0;local v50;local v51;local v52;local v53;while true do if (v49==1) then return (v53 * 16777216) + (v52 * 65536) + (v51 * 256) + v50 ;end if (v49==0) then v50,v51,v52,v53=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v49=1;end end end local function v35()local v54=v34();local v55=v34();local v56=1;local v57=(v31(v55,1,20) * (2^32)) + v54 ;local v58=v31(v55,21,31);local v59=((v31(v55,32)==1) and  -1) or 1 ;if (v58==(568 -(367 + 201))) then if (v57==0) then return v59 * 0 ;else local v100=0;while true do if (v100==0) then v58=1;v56=0;break;end end end elseif (v58==2047) then return ((v57==0) and (v59 * (1/0))) or (v59 * NaN) ;end return v16(v59,v58-1023 ) * (v56 + (v57/(2^52))) ;end local function v36(v60)local v61=0;local v62;local v63;while true do if (v61==0) then v62=nil;if  not v60 then v60=v34();if (v60==0) then return "";end end v61=1;end if (v61==1) then v62=v11(v27,v29,(v29 + v60) -1 );v29=v29 + v60 ;v61=2;end if (v61==2) then v63={};for v101=928 -(214 + 713) , #v62 do v63[v101]=v10(v9(v11(v62,v101,v101)));end v61=3;end if (v61==3) then return v14(v63);end end end local v37=v34;local function v38(...)return {...},v20("#",...);end local function v39()local v64=0;local v65;local v66;local v67;local v68;local v69;local v70;while true do if (2==v64) then for v103=1,v34() do local v104=v32();if (v31(v104,1,1)==0) then local v115=v31(v104,1 + 1 ,3);local v116=v31(v104,881 -(282 + 595) ,6);local v117={v33(),v33(),nil,nil};if (v115==0) then local v119=0;while true do if (v119==0) then v117[1640 -(1523 + 114) ]=v33();v117[4]=v33();break;end end elseif (v115==1) then v117[3]=v34();elseif (v115==2) then v117[3 + 0 ]=v34() -(2^16) ;elseif (v115==3) then v117[3]=v34() -((2 -0)^16) ;v117[4]=v33();end if (v31(v116,1066 -(68 + 997) ,1)==1) then v117[2]=v70[v117[2]];end if (v31(v116,2,2)==1) then v117[3]=v70[v117[3]];end if (v31(v116,3,3)==1) then v117[4]=v70[v117[4]];end v65[v103]=v117;end end for v105=1,v34() do v66[v105-1 ]=v39();end return v68;end if (v64==0) then v65={};v66={};v67={};v68={v65,v66,nil,v67};v64=1;end if (v64==1) then v69=v34();v70={};for v107=1,v69 do local v108=v32();local v109;if (v108==1) then v109=v32()~=0 ;elseif (v108==2) then v109=v35();elseif (v108==3) then v109=v36();end v70[v107]=v109;end v68[3]=v32();v64=2;end end end local function v40(v71,v72,v73)local v74=v71[1];local v75=v71[2];local v76=v71[3];return function(...)local v77=v74;local v78=v75;local v79=v76;local v80=v38;local v81=1;local v82= -1;local v83={};local v84={...};local v85=v20("#",...) -1 ;local v86={};local v87={};for v95=0,v85 do if (v95>=v79) then v83[v95-v79 ]=v84[v95 + 1 ];else v87[v95]=v84[v95 + 1 ];end end local v88=(v85-v79) + 1 ;local v89;local v90;while true do v89=v77[v81];v90=v89[1];if (v90<=41) then if (v90<=20) then if (v90<=(1279 -(226 + 1044))) then if (v90<=4) then if (v90<=1) then if (v90==(0 -0)) then do return v87[v89[2]]();end else local v132=v89[3];local v133=v87[v132];for v220=v132 + 1 ,v89[4] do v133=v133   .. v87[v220] ;end v87[v89[2]]=v133;end elseif (v90<=2) then local v135=v89[2];v87[v135](v21(v87,v135 + 1 ,v82));elseif (v90>3) then local v239=0;local v240;while true do if (v239==0) then v240=v89[2];v87[v240](v87[v240 + (118 -(32 + 85)) ]);break;end end else v87[v89[2]][v89[3 + 0 ]]=v89[4];end elseif (v90<=6) then if (v90==5) then local v136=v89[2];v87[v136]=v87[v136](v21(v87,v136 + 1 ,v89[1 + 2 ]));else local v138=v89[3];local v139=v87[v138];for v221=v138 + 1 ,v89[4] do v139=v139   .. v87[v221] ;end v87[v89[2]]=v139;end elseif (v90<=7) then local v141=v89[2];local v142=v87[v141];local v143=v87[v141 + 2 ];if (v143>0) then if (v142>v87[v141 + 1 ]) then v81=v89[3];else v87[v141 + 3 ]=v142;end elseif (v142<v87[v141 + 1 ]) then v81=v89[3];else v87[v141 + 3 ]=v142;end elseif (v90>8) then local v243=v89[2];v87[v243]=v87[v243]();else v87[v89[2]]=v87[v89[3]];end elseif (v90<=14) then if (v90<=11) then if (v90>(967 -(892 + 65))) then local v144=0;local v145;local v146;while true do if (v144==1) then for v353=1, #v86 do local v354=v86[v353];for v369=0 -0 , #v354 do local v370=0;local v371;local v372;local v373;while true do if (v370==0) then v371=v354[v369];v372=v371[1];v370=1;end if (1==v370) then v373=v371[2];if ((v372==v87) and (v373>=v145)) then local v421=0;while true do if (v421==0) then v146[v373]=v372[v373];v371[1]=v146;break;end end end break;end end end end break;end if (v144==0) then v145=v89[2];v146={};v144=1;end end else v87[v89[2]][v89[3]]=v87[v89[4]];end elseif (v90<=12) then local v149=v89[2];do return v21(v87,v149,v82);end elseif (v90==13) then do return v87[v89[3 -1 ]]();end else v87[v89[2]]=v72[v89[3]];end elseif (v90<=(31 -14)) then if (v90<=(365 -(87 + 263))) then v87[v89[2]]=v73[v89[183 -(67 + 113) ]];elseif (v90>16) then local v249=v89[2];local v250,v251=v80(v87[v249](v21(v87,v249 + 1 ,v82)));v82=(v251 + v249) -1 ;local v252=0;for v320=v249,v82 do local v321=0;while true do if (v321==0) then v252=v252 + 1 ;v87[v320]=v250[v252];break;end end end else local v253=0;local v254;while true do if (v253==0) then v254=v89[2];v87[v254](v87[v254 + 1 ]);break;end end end elseif (v90<=18) then if  not v87[v89[2]] then v81=v81 + 1 ;else v81=v89[3];end elseif (v90>(14 + 5)) then v87[v89[2]]=v87[v89[3]]%v87[v89[4]] ;else local v257=0;local v258;while true do if (v257==0) then v258=v89[2];v87[v258]=v87[v258](v21(v87,v258 + 1 ,v89[3]));break;end end end elseif (v90<=30) then if (v90<=(61 -36)) then if (v90<=22) then if (v90>21) then v87[v89[2]]= #v87[v89[3]];elseif v87[v89[2]] then v81=v81 + 1 ;else v81=v89[3 + 0 ];end elseif (v90<=23) then if v87[v89[2]] then v81=v81 + 1 ;else v81=v89[3];end elseif (v90==24) then v87[v89[7 -5 ]]=v89[955 -(802 + 150) ] + v87[v89[4]] ;else v87[v89[5 -3 ]]={};end elseif (v90<=27) then if (v90>26) then v87[v89[3 -1 ]][v89[3]]=v89[4];else local v155=0;local v156;local v157;while true do if (v155==1) then v87[v156 + 1 ]=v157;v87[v156]=v157[v89[4]];break;end if (v155==0) then v156=v89[2];v157=v87[v89[3]];v155=1;end end end elseif (v90<=28) then local v158=0;local v159;local v160;local v161;while true do if (v158==0) then v159=v89[2];v160=v87[v159 + 2 ];v158=1;end if (v158==2) then if (v160>0) then if (v161<=v87[v159 + 1 ]) then v81=v89[3];v87[v159 + 3 ]=v161;end elseif (v161>=v87[v159 + 1 ]) then v81=v89[3];v87[v159 + 3 ]=v161;end break;end if (v158==1) then v161=v87[v159] + v160 ;v87[v159]=v161;v158=2;end end elseif (v90==29) then local v263=0;local v264;local v265;local v266;while true do if (v263==2) then for v388=1,v89[4] do v81=v81 + 1 ;local v389=v77[v81];if (v389[1]==8) then v266[v388-1 ]={v87,v389[3]};else v266[v388-1 ]={v72,v389[3]};end v86[ #v86 + 1 ]=v266;end v87[v89[2]]=v40(v264,v265,v73);break;end if (v263==1) then v266={};v265=v18({},{[v7("\111\122\117\45\62\218\171","\211\48\37\28\67\90\191")]=function(v391,v392)local v393=v266[v392];return v393[1 + 0 ][v393[2]];end,[v7("\35\118\25\125\144\253\18\77\18\96","\148\124\41\119\24\231")]=function(v394,v395,v396)local v397=v266[v395];v397[1][v397[2]]=v396;end});v263=2;end if (0==v263) then v264=v78[v89[3]];v265=nil;v263=1;end end else v87[v89[2]]=v87[v89[1000 -(915 + 82) ]][v87[v89[4]]];end elseif (v90<=35) then if (v90<=32) then if (v90>31) then v87[v89[2]]=v72[v89[3]];elseif (v89[2]==v87[v89[4]]) then v81=v81 + 1 ;else v81=v89[3];end elseif (v90<=33) then for v222=v89[2],v89[3] do v87[v222]=nil;end elseif (v90>34) then local v270=0;local v271;while true do if (v270==0) then v271=v89[2];do return v21(v87,v271,v82);end break;end end else v87[v89[2]]=v87[v89[3]]%v89[4] ;end elseif (v90<=38) then if (v90<=36) then if (v89[2]==v87[v89[4]]) then v81=v81 + 1 ;else v81=v89[3];end elseif (v90==37) then v81=v89[3];else local v275=0;local v276;while true do if (v275==0) then v276=v89[2];do return v87[v276](v21(v87,v276 + 1 ,v89[3]));end break;end end end elseif (v90<=39) then local v164=v89[2];local v165=v87[v89[8 -5 ]];v87[v164 + 1 ]=v165;v87[v164]=v165[v89[4]];elseif (v90==40) then v87[v89[2]][v87[v89[3]]]=v87[v89[3 + 1 ]];else v81=v89[3];end elseif (v90<=62) then if (v90<=51) then if (v90<=46) then if (v90<=43) then if (v90>42) then local v169=0;local v170;local v171;local v172;local v173;while true do if (v169==0) then v170=v89[2];v171,v172=v80(v87[v170](v21(v87,v170 + 1 ,v82)));v169=1;end if (v169==2) then for v355=v170,v82 do v173=v173 + 1 ;v87[v355]=v171[v173];end break;end if (1==v169) then v82=(v172 + v170) -1 ;v173=0;v169=2;end end else local v174=v89[2];local v175,v176=v80(v87[v174](v21(v87,v174 + (1 -0) ,v89[3])));v82=(v176 + v174) -1 ;local v177=0;for v224=v174,v82 do local v225=0;while true do if (v225==0) then v177=v177 + 1 ;v87[v224]=v175[v177];break;end end end end elseif (v90<=44) then v87[v89[2]]=v87[v89[3]] + v89[4] ;elseif (v90==45) then v87[v89[2]][v87[v89[3]]]=v89[4];else v87[v89[2]]= #v87[v89[3]];end elseif (v90<=48) then if (v90==47) then local v179=v89[2];v87[v179]=v87[v179](v21(v87,v179 + (1188 -(1069 + 118)) ,v82));else local v181=0;local v182;while true do if (0==v181) then v182=v89[2];v87[v182](v21(v87,v182 + 1 ,v89[3]));break;end end end elseif (v90<=49) then v87[v89[2]]=v87[v89[6 -3 ]];elseif (v90==(109 -59)) then v87[v89[2]]=v73[v89[3]];else local v285=v89[2];v87[v285](v21(v87,v285 + 1 ,v89[3]));end elseif (v90<=56) then if (v90<=53) then if (v90==52) then if  not v87[v89[2]] then v81=v81 + 1 ;else v81=v89[3];end else local v185=0;local v186;local v187;local v188;while true do if (2==v185) then if (v187>0) then if (v188<=v87[v186 + 1 ]) then v81=v89[1 + 2 ];v87[v186 + 3 ]=v188;end elseif (v188>=v87[v186 + 1 ]) then local v409=0;while true do if (v409==0) then v81=v89[3];v87[v186 + (4 -1) ]=v188;break;end end end break;end if (1==v185) then v188=v87[v186] + v187 ;v87[v186]=v188;v185=2;end if (v185==0) then v186=v89[2];v187=v87[v186 + 2 ];v185=1;end end end elseif (v90<=54) then if (v87[v89[2]]==v89[4 + 0 ]) then v81=v81 + (792 -(368 + 423)) ;else v81=v89[3];end elseif (v90==55) then local v288=0;local v289;while true do if (v288==0) then v289=v89[2];v87[v289]=v87[v289](v21(v87,v289 + 1 ,v82));break;end end else v87[v89[2]]=v87[v89[9 -6 ]] + v89[4] ;end elseif (v90<=59) then if (v90<=57) then local v189=v89[2];v87[v189]=v87[v189]();elseif (v90>58) then v87[v89[2]]=v87[v89[3]]%v87[v89[4]] ;else v87[v89[2]]=v87[v89[3]][v89[4]];end elseif (v90<=(78 -(10 + 8))) then v87[v89[7 -5 ]]=v87[v89[3]][v89[4]];elseif (v90>61) then local v294=v89[2];local v295=v87[v294];for v335=v294 + 1 ,v82 do v15(v295,v87[v335]);end else do return;end end elseif (v90<=72) then if (v90<=67) then if (v90<=64) then if (v90>63) then v87[v89[2]]=v87[v89[445 -(416 + 26) ]][v87[v89[12 -8 ]]];else v87[v89[2]][v87[v89[3]]]=v87[v89[4]];end elseif (v90<=65) then v87[v89[2]]=v89[3];elseif (v90==66) then v87[v89[2]][v89[3]]=v87[v89[4]];else v87[v89[2]][v87[v89[3]]]=v89[4];end elseif (v90<=69) then if (v90>(30 + 38)) then local v199=v89[2];local v200={};for v226=1, #v86 do local v227=v86[v226];for v300=0, #v227 do local v301=v227[v300];local v302=v301[1 -0 ];local v303=v301[440 -(145 + 293) ];if ((v302==v87) and (v303>=v199)) then v200[v303]=v302[v303];v301[1]=v200;end end end else v87[v89[2]]=v87[v89[3]]%v89[4] ;end elseif (v90<=70) then local v202=v78[v89[3]];local v203;local v204={};v203=v18({},{[v7("\46\189\36\171\211\20\154","\183\113\226\77\197")]=function(v228,v229)local v230=v204[v229];return v230[431 -(44 + 386) ][v230[2]];end,[v7("\127\102\187\217\87\80\187\216\69\65","\188\32\57\213")]=function(v231,v232,v233)local v234=0;local v235;while true do if (v234==0) then v235=v204[v232];v235[1][v235[2]]=v233;break;end end end});for v236=1,v89[4] do v81=v81 + 1 ;local v237=v77[v81];if (v237[1]==8) then v204[v236-(1487 -(998 + 488)) ]={v87,v237[3 + 0 ]};else v204[v236-1 ]={v72,v237[3]};end v86[ #v86 + 1 ]=v204;end v87[v89[2]]=v40(v202,v203,v73);elseif (v90>71) then if (v87[v89[2]]==v89[4]) then v81=v81 + (773 -(201 + 571)) ;else v81=v89[3];end else do return;end end elseif (v90<=77) then if (v90<=74) then if (v90==73) then local v206=0;local v207;while true do if (v206==0) then v207=v89[2];v87[v207](v21(v87,v207 + 1 ,v82));break;end end else v87[v89[2]]=v89[3] + v87[v89[4]] ;end elseif (v90<=75) then local v209=0;local v210;while true do if (v209==0) then v210=v89[2];do return v87[v210](v21(v87,v210 + (1139 -(116 + 1022)) ,v89[3]));end break;end end elseif (v90==76) then for v340=v89[2],v89[12 -9 ] do v87[v340]=nil;end else v87[v89[2]]=v89[3];end elseif (v90<=80) then if (v90<=78) then local v211=0;local v212;local v213;local v214;local v215;while true do if (v211==2) then for v366=v212,v82 do local v367=0;while true do if (v367==0) then v215=v215 + 1 + 0 ;v87[v366]=v213[v215];break;end end end break;end if (v211==0) then v212=v89[2];v213,v214=v80(v87[v212](v87[v212 + 1 ]));v211=1;end if (v211==1) then v82=(v214 + v212) -1 ;v215=0;v211=2;end end elseif (v90>79) then local v306=0;local v307;local v308;while true do if (v306==0) then v307=v89[2];v308=v87[v307];v306=1;end if (v306==1) then for v399=v307 + (3 -2) ,v82 do v15(v308,v87[v399]);end break;end end else v87[v89[2]]={};end elseif (v90<=81) then local v216=0;local v217;local v218;local v219;while true do if (v216==0) then v217=v89[2];v218=v87[v217];v216=1;end if (v216==1) then v219=v87[v217 + 2 ];if (v219>0) then if (v218>v87[v217 + 1 ]) then v81=v89[3];else v87[v217 + 3 ]=v218;end elseif (v218<v87[v217 + 1 ]) then v81=v89[3];else v87[v217 + 3 ]=v218;end break;end end elseif (v90>82) then local v310=0;local v311;local v312;local v313;local v314;while true do if (v310==1) then v82=(v313 + v311) -1 ;v314=0;v310=2;end if (v310==2) then for v400=v311,v82 do v314=v314 + 1 ;v87[v400]=v312[v314];end break;end if (v310==0) then v311=v89[7 -5 ];v312,v313=v80(v87[v311](v87[v311 + 1 ]));v310=1;end end else local v315=v89[2];local v316,v317=v80(v87[v315](v21(v87,v315 + 1 ,v89[3])));v82=(v317 + v315) -1 ;local v318=0;for v346=v315,v82 do v318=v318 + 1 ;v87[v346]=v316[v318];end end v81=v81 + 1 ;end end;end return v40(v39(),{},v28)(...);end vv17(),...);